version: "3.9"

services:
  rdb:
    image: postgres:14.5-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: testing
    ports:
      - "5432:5432"
    volumes:
      - rdb:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - rdb
  rabbitmq:
    image: rabbitmq:3.10.7-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  barcode-srv:
    image: cosmtrek/air
    working_dir: /project
    volumes:
      - ./barcode/:/project/
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - RDM_HOST=rdb
      - RDM_PORT=5432
      - RDM_USER=postgres
      - RDM_PASSWORD=example
      - RDM_DB=testing
      - RDM_MIGRATION=false
      - TIME_ZONE=Asia/Bangkok
      - RMQ_HOST=rabbitmq
      - RMQ_USR=guest
      - RMQ_PASS=guest
      - RMQ_PORT=5672
    command: air
    depends_on:
      - rdb
      - rabbitmq
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1000M
        reservations:
          cpus: "1"
          memory: 1000M
  # order-srv:
  #   image: cosmtrek/air
  #   working_dir: /project
  #   volumes:
  #     - ./order/:/project/
  #   ports:
  #     - "5002:5002"
  #   environment:
  #     - PORT=5002
  #     - RDM_HOST=rdb
  #     - RDM_PORT=5432
  #     - RDM_USER=postgres
  #     - RDM_PASSWORD=example
  #     - RDM_DB=testing
  #     - RDM_MIGRATION=false
  #     - TIME_ZONE=Asia/Bangkok
  #   command: air
  #   depends_on:
  #     - rdb

volumes:
  rdb:
    driver: local
